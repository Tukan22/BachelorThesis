par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting(VaRresults = VaRresults, scheme = "expanding", filename = "Plots/Backtesting_e.pdf")
counter
measure
printbacktesting <- function(VaRresults, scheme, filename){
siglevels = c(0.1, 0.05, 0.01)
outputcolnames = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS", "HAR-AS", "HAR-RSV", "HAR-RSV",
"HAR-RSRK", "HAR-RSRK", "RGARCH", "RGARCH", "GARCH", "GARCH")
counter = 1
pdf(file = filename, width = 8.27, height = 11.29)
par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
print(measure)
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting <- function(VaRresults, scheme, filename){
siglevels = c(0.1, 0.05, 0.01)
outputcolnames = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS", "HAR-AS", "HAR-RSV", "HAR-RSV",
"HAR-RSRK", "HAR-RSRK", "RGARCH", "RGARCH", "GARCH", "GARCH")
counter = 1
pdf(file = filename, width = 8.27, height = 11.29)
par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
print(measure)
print(countr)
print(siglevels[counter])
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting <- function(VaRresults, scheme, filename){
siglevels = c(0.1, 0.05, 0.01)
outputcolnames = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS", "HAR-AS", "HAR-RSV", "HAR-RSV",
"HAR-RSRK", "HAR-RSRK", "RGARCH", "RGARCH", "GARCH", "GARCH")
counter = 1
pdf(file = filename, width = 8.27, height = 11.29)
par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
print(measure)
print(counter)
print(siglevels[counter])
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
for(measure in seq(from = 2, to = 5, by = 1)){
counter = 1
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
print(measure)
print(counter)
print(siglevels[counter])
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
printbacktesting <- function(VaRresults, scheme, filename){
siglevels = c(0.1, 0.05, 0.01)
outputcolnames = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS", "HAR-AS", "HAR-RSV", "HAR-RSV",
"HAR-RSRK", "HAR-RSRK", "RGARCH", "RGARCH", "GARCH", "GARCH")
pdf(file = filename, width = 8.27, height = 11.29)
par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
counter = 1
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
print(measure)
print(counter)
print(siglevels[counter])
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting(VaRresults = VaRresults, scheme = "expanding", filename = "Plots/Backtesting_e.pdf")
printbacktesting <- function(VaRresults, scheme, filename){
siglevels = c(0.1, 0.05, 0.01)
outputcolnames = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS", "HAR-AS", "HAR-RSV", "HAR-RSV",
"HAR-RSRK", "HAR-RSRK", "RGARCH", "RGARCH", "GARCH", "GARCH")
pdf(file = filename, width = 8.27, height = 11.29)
par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
counter = 1
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
if(measure == 5){
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.2))
}
else{
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
}
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting(VaRresults = VaRresults, scheme = "expanding", filename = "Plots/Backtesting_e.pdf")
printbacktesting <- function(VaRresults, scheme, filename){
siglevels = c(0.1, 0.05, 0.01)
outputcolnames = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS", "HAR-AS", "HAR-RSV", "HAR-RSV",
"HAR-RSRK", "HAR-RSRK", "RGARCH", "RGARCH", "GARCH", "GARCH")
pdf(file = filename, width = 8.27, height = 11.29)
par(mfrow =c(4,3))
for(measure in seq(from = 2, to = 5, by = 1)){
counter = 1
for(VaRresults_output in VarResults){
# VaRresults_output = VaR(VaRalpha)
output_e = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
output_r = data.frame(matrix(rep(NA, times =  7*nrow(stocks)), ncol = 7))
colnames(output_e) = outputcolnames[seq(from = 1, to = 14, by =2)]
colnames(output_r) = outputcolnames[seq(from = 2, to = 14, by =2)]
rownames(output_e) = stocks$stockname
rownames(output_r) = stocks$stockname
for(i in seq(from = 1, to = 14, by =2)){
output_e[,(i+1)/2]  =
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
for(i in seq(from = 2, to = 14, by =2)){
output_r[,i/2]=
unlist(
lapply(
VaRresults_output, FUN = function(x){x[i, measure]}
)
)
}
if(scheme == "expanding"){
plotoutput = output_e
} else if (scheme == "rolling"){
plotoutput = output_r
}
#      if(counter * measure == 15){
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.012))
#      }
#      else{
#        boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n')
#      }
if(measure == 5){
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 0.12))
}
else{
boxplot(plotoutput, outline  = FALSE, main = colnames(VaRresults_output[[1]])[measure], cex.main = 2, xaxt = 'n', ylim = c(0, 1))
}
axis(1, at=1:7, labels=FALSE, xaxt ='n')
text(x=1:7, y=par("usr")[3] , labels=colnames(plotoutput), srt=90, adj=1, xpd=TRUE, cex=1.2)
if(measure == 5){
abline(h = siglevels[counter], col = "green", lty = 2, lwd = 2)
}
else{
abline(h = 0.05, col = "red", lty = 2, lwd = 2)
}
counter = counter + 1
}
}
par(mfrow =c(1,1))
dev.off()
}
printbacktesting(VaRresults = VaRresults, scheme = "rolling", filename = "Plots/Backtesting_r.pdf")
printbacktesting(VaRresults = VaRresults, scheme = "expanding", filename = "Plots/Backtesting_e.pdf")
modelnames = c("AR(1)-RV","HAR","HAR-AS","HAR-RSV","HAR-RSRK","RGARCH","GARCH")
pdf(file = "Plots/DMpval.pdf", width = 8.27, height = 11.69)
# par(mfrow = c(1,7))
par(mfrow = c(2,4))
for(i1 in seq(from = 1, to =7)){
modelselection = seq(from = 1, to = 7)[-i1]
#  print(modelselection)
DM_box_data_e = data.frame(matrix(rep(NA, times = 7*nrow(stocks)),
ncol = nrow(stocks)))
for(i2 in modelselection){
DM_box_data_e[i2,] = unlist(DMresults_e[[i1]][[i2]])
}
rownames(DM_box_data_e) = modelnames
par(bty = 'n')
boxplot(t(DM_box_data_e)[,modelselection], ylim = c(0,1),
main = modelnames[i1], xaxt = 'n', cex.main = 2, yaxt = 'n', bty = 'n')
abline(h = 0.05, col = "red", lwd = 4, lty = 2)
abline(h = 0.95, col = "red", lwd = 4, lty = 2)
axis(1, at=1:6, labels=FALSE, xaxt ='n')
axis(2, at=seq(from = 0, to = 1, by = 0.05), labels=seq(from = 0, to = 1, by = 0.05), xaxt ='n')
# indent = 10^(round(log(mean(plotvar), base = 10))-2)*5
text(x=1:6, y=par("usr")[3]+0.025 , labels=modelnames[modelselection], srt=90, adj=1, xpd=TRUE, cex=1.3)
}
dev.off()
