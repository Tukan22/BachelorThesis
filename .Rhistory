mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[2],  FUN = function(y){y[2]})
})))
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[2],  FUN = function(y){y[2]})
})))
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[2],  FUN = function(y){y[3]})
})))
VaRresults_output
for(model in seq(1:14]))){
for(model in seq(1:14)){
for(value in seq(1:12)){
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[value+1],  FUN = function(y){y[model]})
})))
}
}
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[2],  FUN = function(y){y[model]})
})))
seq(1:12)
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
lapply(x[col],  FUN = function(y){y[model]})
col
for(model in seq(1:14]))){
for(model in seq(1:14)){
for(col in seq(1:4)){
}
}
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
for(model in seq(1:14)){
for(col in seq(2:5)){
}
}
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
for(model in seq(1:14)){
for(col in seq(2:5)){
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
for(model in seq(1:14)){
for(col in seq(2:5)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
for(model in seq(1:14)){
for(col in seq(2:5)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[2],  FUN = function(y){y[1]})
}))))
}
}
for(model in seq(1:14)){
for(col in seq(2:5)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
VaRresults_output
for(model in seq(1:14)){
for(col in seq(1:4)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
for(model in seq(1:14)){
for(col in seq(2:5)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
for(model in seq(1:14)){
for(col in seq(2:5)){
print(paste(col, model))
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
seq(2:5)
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 2, step = 1)){
print(paste(col, model))
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 2, step = 1)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
meanVaRvalues
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 14))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
print(
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
}))))
}
}
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
meanVaRvalues
VaRvalues = data.frame(matrix(rep(NA, times = 14)))
VaRvalues
VaRvalues = data.frame(matrix(rep(NA, times = 14)))
for(VaRalpha in c(0.1, 0.05, 0.01)){
VarValues = cbind(VarValues, VaR(VaRalpha))
#  VaRresults_output = VaR(VaRalpha)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
for(VaRalpha in c(0.1, 0.05, 0.01)){
VaRvalues = cbind(VaRvalues, VaR(VaRalpha))
#  VaRresults_output = VaR(VaRalpha)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
meanVaRvalues
for(VaRalpha in c(0.1, 0.05, 0.01)){
# VaRvalues = cbind(VaRvalues, VaR(VaRalpha))
VaRresults_output = VaR(VaRalpha)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
MeanVarValues_2 = data.frame(matrix(rep(NA, times = 14), ncol = 1))
MeanVarValues_2
for(VaRalpha in c(0.1, 0.05, 0.01)){
# VaRvalues = cbind(VaRvalues, VaR(VaRalpha))
VaRresults_output = VaR(VaRalpha)
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
MeanVarValues_2 = cbind(MeanVarValues_2, meanVaRvalues)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
MeanVarValues_2
MeanVarValues_2[-1]
VaRresults_output
VaRresults_output[[1]]
colnamse(VaRresults_output[[1]])
colnames(VaRresults_output[[1]])
colnames(VaRresults_output[[1]])[2:5]
colnames(VaRresults_output[[1]])[2:4]
colnames(VaRresults_output[[1]])[2:5]
for(VaRalpha in c(0.1, 0.05, 0.01)){
# VaRvalues = cbind(VaRvalues, VaR(VaRalpha))
VaRresults_output = VaR(VaRalpha)
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
colnames(meanVaRvalues) = colnames(VaRresults_output[[1]])[2:5]
colnamesrownames(meanVaRvalues) = rownames(VaRresults_output[[1]])
MeanVarValues_2 = cbind(MeanVarValues_2, meanVaRvalues)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
rownames(VaRresults_output[[1]]
rownames(VaRresults_output[[1]])
rownames(VaRresults_output[[1]])
VaRresults_output
for(VaRalpha in c(0.1, 0.05, 0.01)){
# VaRvalues = cbind(VaRvalues, VaR(VaRalpha))
VaRresults_output = VaR(VaRalpha)
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
colnames(meanVaRvalues) = colnames(VaRresults_output[[1]])[2:5]
rownames(meanVaRvalues) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
"HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
"RGARCH", "RGARCH", "GARCH", "GARCH")
MeanVarValues_2 = cbind(MeanVarValues_2, meanVaRvalues)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
meanVaRvalues
rownames(meanVaRvalues)
rownames(meanVaRvalues) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
"HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
"RGARCH", "RGARCH", "GARCH", "GARCH")
class(meanVaRvalues)
meanVaRvalues
rownames(meanVaRvalues) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
"HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
"RGARCH", "RGARCH", "GARCH", "GARCH")
VaRresults_output
rownames(meanVaRvalues) = c("AR(1)-RV expanding", "AR(1)-RV rolling", "HAR expanding", "HAR rolling",
"HAR-AS expanding", "HAR-AS rolling", "HAR-RSV expanding", "HAR-RSV rolling",
"HAR-RSRK expanding", "HAR-RSRK rolling", "RGARCH expanding", "RGARCH rolling",
"GARCH expanding", "GARCH rolling")
for(VaRalpha in c(0.1, 0.05, 0.01)){
# VaRvalues = cbind(VaRvalues, VaR(VaRalpha))
VaRresults_output = VaR(VaRalpha)
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
colnames(meanVaRvalues) = colnames(VaRresults_output[[1]])[2:5]
rownames(meanVaRvalues) = c("AR(1)-RV expanding", "AR(1)-RV rolling", "HAR expanding", "HAR rolling",
"HAR-AS expanding", "HAR-AS rolling", "HAR-RSV expanding", "HAR-RSV rolling",
"HAR-RSRK expanding", "HAR-RSRK rolling", "RGARCH expanding", "RGARCH rolling",
"GARCH expanding", "GARCH rolling")
MeanVarValues_2 = cbind(MeanVarValues_2, meanVaRvalues)
#  colnames(VaRresults_output) = c("AR(1)-RV", "AR(1)-RV", "HAR", "HAR", "HAR-AS",
#                                  "HAR-AS", "HAR-RSV", "HAR-RSV", "HAR-RSRK", "HAR-RSRK",
#                                  "RGARCH", "RGARCH", "GARCH", "GARCH")
#  rownames(VaRresults_output) = stocks$stockname
#  VaRmeans = apply(VaRresults_output, MARGIN = 2, FUN = mean)
#  VaRsds = apply(VaRresults_output, MARGIN = 2, FUN = sd)
#  VaRouts = apply(VaRresults_output, MARGIN = 2, FUN = function(x){sum(x<0.05)})/nrow(VaRresults_output)
#  Kupiec_summary = cbind(VaRmeans, VaRsds, VaRouts)
#  rownames(Kupiec_summary) = paste(rownames(Kupiec_summary), rep(c("expanding","rolling"),times = 7))
#  colnames(Kupiec_summary) = c("Mean","SD","p-val < 0.05")
#  print(
#    xtable(
#      Kupiec_summary,
#      caption = c(
#        paste("This table shows the summary statistics of the p-values of the Kupiec's test on ", (1-VaRalpha), " VaR.
#            The first column shows the mean of p-values, the second column the standard deviation
#            and the third column shows in how many cases the p-value was lower than 0.05, i. e. in how many cases the VaR computation was unsuccesful.",
#              sep = ""),
#        paste("Kupiec's test p-values summary, alpha =", (1-VaRalpha), sep = "")),
#      label = paste("Table:Kupiec_test_summary_",(1-VaRalpha), sep = ""),
#      digits = 2
#    ),
#    file = paste("Outputs/Kupiec_p_vals_summary_", (1-VaRalpha), ".tex", sep = "")
#  )
}
MeanVarValues_2
MeanVarValues_2 = MeanVarValues_2[-1]
MeanVarValues_2 = MeanVarValues_2[,1:14]
MeanVarValues_2
MeanVarValues_2 = data.frame(matrix(rep(NA, times = 14), ncol = 1))
for(VaRalpha in c(0.1, 0.05, 0.01)){
VaRresults_output = VaR(VaRalpha)
meanVaRvalues = data.frame(matrix(rep(NA, times = 4*14), ncol = 4))
for(model in seq(from = 1, to = 14, by = 1)){
for(col in seq(from = 2, to = 5, step = 1)){
meanVaRvalues[model, col-1] =
mean(unlist(lapply(VaRresults_output, FUN = function(x){
lapply(x[col],  FUN = function(y){y[model]})
})))
}
}
colnames(meanVaRvalues) = colnames(VaRresults_output[[1]])[2:5]
rownames(meanVaRvalues) = c("AR(1)-RV expanding", "AR(1)-RV rolling", "HAR expanding", "HAR rolling",
"HAR-AS expanding", "HAR-AS rolling", "HAR-RSV expanding", "HAR-RSV rolling",
"HAR-RSRK expanding", "HAR-RSRK rolling", "RGARCH expanding", "RGARCH rolling",
"GARCH expanding", "GARCH rolling")
MeanVarValues_2 = cbind(MeanVarValues_2, meanVaRvalues)
}
MeanVarValues_2 = MeanVarValues_2[-1]
MeanVarValues_2
MeanVarValues_2[,c(1,5,9)]
MeanVarValues_2[,c(3,7,11)]
MeanVarValues_2[,c(4,8,12)]
MeanVarValues_2[,c(1,5,9)]
MeanVarValues_2[,c(2,6,10)]
MeanVarValues_2[,c(3,7,11)]
MeanVarValues_2[,c(4,8,12)]
apply(meanvarvalues_2, FUN = order, MARGIN = 1)
apply(MeanVarValues_2, FUN = order, MARGIN = 1)
apply(MeanVarValues_2, FUN = order, MARGIN = 2)
MeanVarValues_2[,c(3,7,11)]
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2, FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2, FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2, FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2[,c(4,8,12)], FUN = order, MARGIN = 2)
MeanVarValues_2
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2[,c(4,8,12)], FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2[,c(4,8,12)], FUN = order, MARGIN = 2)
apply(MeanVarValues_2[,c(4,8,12)], FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]
apply(MeanVarValues_2[,c(4,8,12)], FUN = order, MARGIN = 2)
apply(MeanVarValues_2[,c(4,8,12)]*1000, FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]*1000
apply(MeanVarValues_2[,c(4,8,12)]*1000, FUN = order, MARGIN = 2)
MeanVarValues_2[,c(4,8,12)]
order(MeanVarValues_2[,12])
MeanVarValues_2[,12]
apply(MeanVarValues_2[,c(4,8,12)], FUN = order, MARGIN = 2) # !!! SEEMS IT DOES NOT WORK PROPERLY !!!
apply(MeanVarValues_2[,c(4,8,12)], MARGIN = 2 , FUN = order) # !!! SEEMS IT DOES NOT WORK PROPERLY !!!
MeanVarValues_2[,c(4,8,12)]
MeanVarValues_2[,c(4,8,12)]
MeanVarValues_2[,12]
class(MeanVarValues_2[,12])
MeanVarValues_2[,12]
MeanVarValues_2[,12]*1000
round(MeanVarValues_2[,12]*1000)
order(MeanVarValues_2[,12]*1000)
order(MeanVarValues_2[,12]*1000, descending = FALSE)
order(MeanVarValues_2[,12]*1000, decreasing = FALSE)
order(MeanVarValues_2[,12]*1000, decreasing = TRUE)
MeanVarValues_2[order(MeanVarValues_2[,12], decreasing = FALSE),
12]
order(MeanVarValues_2[,12], decreasing = FALSE)
print(order(MeanVarValues_2[,12], decreasing = FALSE) )
paste(MeanVarValues_2[,12], order(MeanVarValues_2[,12], decreasing = FALSE))
paste(MeanVarValues_2[order(MeanVarValues_2[,12], decreasing = FALSE),12], order(MeanVarValues_2[,12], decreasing = FALSE))
